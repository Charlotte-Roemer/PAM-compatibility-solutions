model_p
#scaling sensitivities to 0;1
model_p <- model_p %>%
group_by(Recorder) %>%
mutate(TriggerLevel_scaled=(TriggerLevel-min(TriggerLevel))/(max(TriggerLevel)-min(TriggerLevel))) %>%
ungroup()
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
#scaling sensitivities to 0;1
Activity_file <- Activity_file %>%
group_by(Recorder) %>%
mutate(TriggerLevel_scaled=(TriggerLevel_adjusted-min(TriggerLevel_adjusted))/(max(TriggerLevel_adjusted)-min(TriggerLevel_adjusted))) %>%
ungroup()
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder, k=11), data=Activity_file, fx=T) #k may change according to the real number of settings
model_p <- predict_gam(gam_model)
model_p
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_adjusted, by=Recorder, k=11), data=Activity_file, fx=T) #k may change according to the real number of settings
model_p <- predict_gam(gam_model)
model_p
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
p_gam <- ggplot(model_p, aes(x = TriggerLevel_adjusted, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
Activity_file <- read_delim("/home/charlotte/Documents/Post-Doc/Stages/Laureen et Nathan/Analyse/Activity_file.csv")
# Keep only common pipistrelle for 0.5 confidence
Activity_file = Activity_file %>%
filter(espece == "Pippip", probability_filter == 0.5)
# Consider Batlogger A and Batlogger A+ the same machine
Activity_file$Recorder = gsub("^Batlogger.*", "Batlogger", Activity_file$Recorder)
# Keep only Site CE_0 (for sensititivity curve)
Activity_file = Activity_file %>%
filter(Site == "CE_0")
# Remove -48dB Trigger for SM4BAT because it cannot fit on the curve
Activity_file = Activity_file %>%
filter(!(Recorder == "SM4BAT" & TriggerLevel == -42))
# Adapt Trigger Level so that it goes in the right direction
Activity_file$TriggerLevel_adjusted = Activity_file$TriggerLevel
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder!="Audiomoth",-Activity_file$TriggerLevel, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==1, -40, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==2, -32, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==3, -30, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==7, -22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==8, -22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==9, -20, Activity_file$TriggerLevel_adjusted)
# Add ID for Recorder + Sensitivity Level
Activity_file$ID = paste0(Activity_file$Recorder, "_", Activity_file$TriggerLevel)
# Prepare data for analysis (factors)
Activity_file$Recorder = as.factor(Activity_file$Recorder)
Activity_file <- read_delim("/home/charlotte/Documents/Post-Doc/Stages/Laureen et Nathan/Analyse/Activity_file.csv")
# Keep only common pipistrelle for 0.5 confidence
Activity_file = Activity_file %>%
filter(espece == "Pippip", probability_filter == 0.5)
# Consider Batlogger A and Batlogger A+ the same machine
Activity_file$Recorder = gsub("^Batlogger.*", "Batlogger", Activity_file$Recorder)
# Keep only Site CE_0 (for sensititivity curve)
Activity_file = Activity_file %>%
filter(Site == "CE_0")
# Remove -48dB Trigger for SM4BAT because it cannot fit on the curve
Activity_file = Activity_file %>%
filter(!(Recorder == "SM4BAT" & TriggerLevel == -42))
# Adapt Trigger Level so that it goes in the right direction
Activity_file$TriggerLevel_adjusted = Activity_file$TriggerLevel
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Batcorder" | Activity_file$Recorder=="SM4BAT",-Activity_file$TriggerLevel, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==1, -40, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==2, -32, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==3, -30, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==7, -22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==8, -22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==9, -20, Activity_file$TriggerLevel_adjusted)
# Add ID for Recorder + Sensitivity Level
Activity_file$ID = paste0(Activity_file$Recorder, "_", Activity_file$TriggerLevel)
# Prepare data for analysis (factors)
Activity_file$Recorder = as.factor(Activity_file$Recorder)
#Activity_file$TriggerLevel = as.factor(Activity_file$TriggerLevel)
#Activity_file$ID = as.factor(Activity_file$ID)
# Calculate Relative activity to make results comparable
# Activity_file <- Activity_file %>%
#   group_by(Recorder, idparticipation) %>%
#   mutate(Relative_activity=(nb_triggered_files/nb_triggered_files[ID==]))
Activity_file <- Activity_file %>%
group_by(DateNight) %>%
mutate(
sm4bat_0_activity = nb_triggered_files[ID == "SM4BAT_0"],
Relative_activity = nb_triggered_files / sm4bat_0_activity
) %>%
ungroup() %>%
as.data.frame()
Activity_file <- read_delim("/home/charlotte/Documents/Post-Doc/Stages/Laureen et Nathan/Analyse/Activity_file.csv")
# Keep only common pipistrelle for 0.5 confidence
Activity_file = Activity_file %>%
filter(espece == "Pippip", probability_filter == 0.5)
# Consider Batlogger A and Batlogger A+ the same machine
Activity_file$Recorder = gsub("^Batlogger.*", "Batlogger", Activity_file$Recorder)
# Keep only Site CE_0 (for sensititivity curve)
Activity_file = Activity_file %>%
filter(Site == "CE_0")
# Remove -48dB Trigger for SM4BAT because it cannot fit on the curve
Activity_file = Activity_file %>%
filter(!(Recorder == "SM4BAT" & TriggerLevel == -42))
# Adapt Trigger Level so that it goes in the right direction
Activity_file$TriggerLevel_adjusted = Activity_file$TriggerLevel
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Batcorder" | Activity_file$Recorder=="SM4BAT",-Activity_file$TriggerLevel, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==1, 40, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==2, 32, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==3, 30, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==7, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==8, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==9, 20, Activity_file$TriggerLevel_adjusted)
# Add ID for Recorder + Sensitivity Level
Activity_file$ID = paste0(Activity_file$Recorder, "_", Activity_file$TriggerLevel)
# Prepare data for analysis (factors)
Activity_file$Recorder = as.factor(Activity_file$Recorder)
#Activity_file$TriggerLevel = as.factor(Activity_file$TriggerLevel)
#Activity_file$ID = as.factor(Activity_file$ID)
# Calculate Relative activity to make results comparable
# Activity_file <- Activity_file %>%
#   group_by(Recorder, idparticipation) %>%
#   mutate(Relative_activity=(nb_triggered_files/nb_triggered_files[ID==]))
Activity_file <- Activity_file %>%
group_by(DateNight) %>%
mutate(
sm4bat_0_activity = nb_triggered_files[ID == "SM4BAT_0"],
Relative_activity = nb_triggered_files / sm4bat_0_activity
) %>%
ungroup() %>%
as.data.frame()
Activity_file <- read_delim("/home/charlotte/Documents/Post-Doc/Stages/Laureen et Nathan/Analyse/Activity_file.csv")
# Keep only common pipistrelle for 0.5 confidence
Activity_file = Activity_file %>%
filter(espece == "Pippip", probability_filter == 0.5)
# Consider Batlogger A and Batlogger A+ the same machine
Activity_file$Recorder = gsub("^Batlogger.*", "Batlogger", Activity_file$Recorder)
# Keep only Site CE_0 (for sensititivity curve)
Activity_file = Activity_file %>%
filter(Site == "CE_0")
# Remove -48dB Trigger for SM4BAT because it cannot fit on the curve
Activity_file = Activity_file %>%
filter(!(Recorder == "SM4BAT" & TriggerLevel == -42))
# Adapt Trigger Level so that it goes in the right direction
Activity_file$TriggerLevel_adjusted = Activity_file$TriggerLevel
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder!="Audiomoth",-Activity_file$TriggerLevel, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==1, 40, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==2, 32, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==3, 30, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==7, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==8, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==9, 20, Activity_file$TriggerLevel_adjusted)
# Add ID for Recorder + Sensitivity Level
Activity_file$ID = paste0(Activity_file$Recorder, "_", Activity_file$TriggerLevel)
# Prepare data for analysis (factors)
Activity_file$Recorder = as.factor(Activity_file$Recorder)
#Activity_file$TriggerLevel = as.factor(Activity_file$TriggerLevel)
#Activity_file$ID = as.factor(Activity_file$ID)
# Calculate Relative activity to make results comparable
# Activity_file <- Activity_file %>%
#   group_by(Recorder, idparticipation) %>%
#   mutate(Relative_activity=(nb_triggered_files/nb_triggered_files[ID==]))
Activity_file <- Activity_file %>%
group_by(DateNight) %>%
mutate(
sm4bat_0_activity = nb_triggered_files[ID == "SM4BAT_0"],
Relative_activity = nb_triggered_files / sm4bat_0_activity
) %>%
ungroup() %>%
as.data.frame()
Activity_file <- read_delim("/home/charlotte/Documents/Post-Doc/Stages/Laureen et Nathan/Analyse/Activity_file.csv")
# Keep only common pipistrelle for 0.5 confidence
Activity_file = Activity_file %>%
filter(espece == "Pippip", probability_filter == 0.5)
# Consider Batlogger A and Batlogger A+ the same machine
Activity_file$Recorder = gsub("^Batlogger.*", "Batlogger", Activity_file$Recorder)
# # Keep only Site CE_0 (for sensititivity curve)
# Activity_file = Activity_file %>%
#   filter(Site == "CE_0")
# Remove -48dB Trigger for SM4BAT because it cannot fit on the curve
Activity_file = Activity_file %>%
filter(!(Recorder == "SM4BAT" & TriggerLevel == -42))
# Adapt Trigger Level so that it goes in the right direction
Activity_file$TriggerLevel_adjusted = Activity_file$TriggerLevel
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder!="Audiomoth",-Activity_file$TriggerLevel, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==0, 100, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==1, 40, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==2, 32, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==3, 30, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==5, 26, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==7, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==8, 22, Activity_file$TriggerLevel_adjusted)
Activity_file$TriggerLevel_adjusted = ifelse(Activity_file$Recorder=="Audiomoth" & Activity_file$TriggerLevel==9, 20, Activity_file$TriggerLevel_adjusted)
# Add ID for Recorder + Sensitivity Level
Activity_file$ID = paste0(Activity_file$Recorder, "_", Activity_file$TriggerLevel)
# Prepare data for analysis (factors)
Activity_file$Recorder = as.factor(Activity_file$Recorder)
#Activity_file$TriggerLevel = as.factor(Activity_file$TriggerLevel)
#Activity_file$ID = as.factor(Activity_file$ID)
# Calculate Relative activity to make results comparable
# Activity_file <- Activity_file %>%
#   group_by(Recorder, idparticipation) %>%
#   mutate(Relative_activity=(nb_triggered_files/nb_triggered_files[ID==]))
Activity_file <- Activity_file %>%
group_by(DateNight) %>%
mutate(
sm4bat_0_activity = nb_triggered_files[ID == "SM4BAT_0"],
Relative_activity = nb_triggered_files / sm4bat_0_activity
) %>%
ungroup() %>%
as.data.frame()
#scaling sensitivities to 0;1
Activity_file <- Activity_file %>%
group_by(Recorder) %>%
mutate(TriggerLevel_scaled=(TriggerLevel_adjusted-min(TriggerLevel_adjusted))/(max(TriggerLevel_adjusted)-min(TriggerLevel_adjusted))) %>%
ungroup()
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder, k=11), data=Activity_file, fx=T) #k may change according to the real number of settings
model_p <- predict_gam(gam_model)
model_p
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
summary(model_p)
model_p
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Scaled Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder), data=Activity_file, fx=T) #k may change according to the real number of settings
model_p <- predict_gam(gam_model)
model_p
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Scaled Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
hist(Activity_file$Relative_activity)
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder), data=Activity_file, fx=T, family = betar()) #k may change according to the real number of settings
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder), data=Activity_file, family = betar()) #k may change according to the real number of settings
#### GAM MODEL ####
gam_model <- gam(Relative_activity~s(TriggerLevel_scaled, by=Recorder), data=Activity_file, fx=T, family = betar()) #k may change according to the real number of settings
model_p <- predict_gam(gam_model)
p_gam <- ggplot(model_p, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_line(linewidth = 1.25) +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Recorder), alpha = 0.15, color = NA) +
scale_color_manual(values = mycol) +
scale_fill_manual(values = mycol) +
labs(x = "Scaled Trigger Level",
y = "Relative number of triggered files per night",
color = "Recorders :",
fill = "Recorders :") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(vjust = 2),
panel.grid.major.y = element_line(linewidth = 0.8))
p_gam
hist(exp(Activity_file$Relative_activity))
dim(Activity_file)
hist((Activity_file$Relative_activity*(nrow(Activity_file)-1) + 0.5)/nrow(Activity_file))
hist(Activity_file$Relative_activity)
install.packages("ordbetareg")
library(ordbetareg)
OBR_model = ordbetareg(Relative_activity ~ poly(TriggerLevel_scaled, 2)*Recorder, data=Activity_file, chains=1,iter=2000,refresh=0)
summary(OBR_model)
ord_pred <- conditional_effects(OBR_model)[[1]]
ord_pred %>%
ggplot(aes(y=estimate__,x=TriggerLevel_scaled, color = Recorder)) +
geom_ribbon(aes(ymin=lower__,
ymax=upper__, Recorder),
alpha=0.5, color = NA) +
#geom_hline(yintercept=1,linetype=2) +
geom_line(linewidth = 1.25) +
theme_tufte2 +
scale_y_continuous(labels=scales::percent_format()) +
labs(y="Relative_activity",
x="TriggerLevel_scaled")
ord_pred %>%
ggplot(aes(y=estimate__,x=TriggerLevel_scaled, color = Recorder)) +
geom_ribbon(aes(ymin=lower__,
ymax=upper__, Recorder),
alpha=0.5, color = NA) +
#geom_hline(yintercept=1,linetype=2) +
geom_line(linewidth = 1.25) +
theme_minimal() +
scale_y_continuous(labels=scales::percent_format()) +
labs(y="Relative_activity",
x="TriggerLevel_scaled")
OBR_model = ordbetareg(bf(Relative_activity ~ s(TriggerLevel_scaled, Recorder, bs = "fs")), data=Activity_file, chains=1,iter=2000,refresh=0)
get_prior(
Relative_activity ~ s(TriggerLevel_scaled, Recorder, bs = "fs"),
data = Activity_file,
family = ordbetareg()
)
get_prior(
Relative_activity ~ s(TriggerLevel_scaled, Recorder, bs = "fs"),
data = Activity_file,
family = ordbetareg
)
OBR_model = ordbetareg(bf(Relative_activity ~ s(TriggerLevel_scaled, Recorder, bs = "fs")), data=Activity_file, chains=1,iter=2000,refresh=0)
OBR_model = ordbetareg(bf(Relative_activity ~ TriggerLevel_scaled * Recorder + I(TriggerLevel_scaled^2) * Recorder), data=Activity_file, chains=1,iter=2000,refresh=0)
summary(OBR_model)
ord_pred <- conditional_effects(OBR_model)[[1]]
ord_pred %>%
ggplot(aes(y=estimate__,x=TriggerLevel_scaled, color = Recorder)) +
geom_ribbon(aes(ymin=lower__,
ymax=upper__, Recorder),
alpha=0.5, color = NA) +
#geom_hline(yintercept=1,linetype=2) +
geom_line(linewidth = 1.25) +
theme_minimal() +
scale_y_continuous(labels=scales::percent_format()) +
labs(y="Relative_activity",
x="TriggerLevel_scaled")
ord_pred
new_data <- expand.grid(
TriggerLevel_scaled = seq(min(Activity_file$TriggerLevel_scaled),
max(Activity_file$TriggerLevel_scaled),
length.out = 100),
Recorder = levels(Activity_file$Recorder)
)
library(emmeans)
preds <- emmeans(
OBR_model,
specs = ~ TriggerLevel_scaled | Recorder,
at = list(TriggerLevel_scaled = seq(min(Activity_file$TriggerLevel_scaled),
max(Activity_file$TriggerLevel_scaled),
length.out = 100)),
type = "response"
)
# Convert to data frame
pred_df <- as.data.frame(preds)
ggplot(Activity_file, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(data = pred_df, aes(x = TriggerLevel_scaled, y = emmean, color = Recorder), linewidth = 1) +
geom_ribbon(data = pred_df,
aes(x = TriggerLevel_scaled, ymin = lower.CL, ymax = upper.CL, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
pred_df
ggplot(Activity_file, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(data = pred_df, aes(x = TriggerLevel_scaled, y = emmean, color = Recorder), linewidth = 1) +
geom_ribbon(data = pred_df,
aes(x = TriggerLevel_scaled, ymin = lower.HPD, ymax = upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
names(Activity_file)
ggplot(Activity_file, aes(x = TriggerLevel_scaled, y = Relative_activity, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(data = pred_df, aes(x = TriggerLevel_scaled, y = emmean, color = Recorder), linewidth = 1) +
geom_ribbon(data = pred_df,
aes(x = TriggerLevel_scaled, ymin = lower.HPD, ymax = upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
ggplot(pred_df, aes(x = emmean, y = Relative_activity, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lower.HPD, ymax = upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
ggplot(pred_df, aes(x = emmean, y = TriggerLevel_scaled, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lower.HPD, ymax = upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
ord_pred <- conditional_effects(OBR_model)[[1]]
ord_pred %>%
ggplot(aes(y=estimate__,x=TriggerLevel_scaled, color = Recorder)) +
geom_ribbon(aes(ymin=lower__,
ymax=upper__, Recorder),
alpha=0.5, color = NA) +
#geom_hline(yintercept=1,linetype=2) +
geom_line(linewidth = 1.25) +
theme_minimal() +
scale_y_continuous(labels=scales::percent_format()) +
labs(y="Relative_activity",
x="TriggerLevel_scaled")
ord_pred
ggplot(pred_df, aes(x = emmean, y = TriggerLevel_scaled, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = lower.HPD, ymax = upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
Activity_file
View(Activity_file)
pred_df
ggplot(pred_df, aes(x = emmean, y = TriggerLevel_scaled, color = Recorder)) +
geom_point(alpha = 0.5) +
geom_line(linewidth = 1) +
geom_ribbon(aes(ymin = emmean+lower.HPD, ymax = emmean+upper.HPD, fill = Recorder),
alpha = 0.2, color = NA) +
labs(x = "Trigger Level (scaled)", y = "Predicted Relative Activity", color = "Recorder", fill = "Recorder") +
theme_minimal()
newdat <- expand.grid(
TriggerLevel_scaled = seq(min(Activity_file$TriggerLevel_scaled),
max(Activity_file$TriggerLevel_scaled),
length.out = 100),
Recorder = unique(Activity_file$Recorder)
)
preds <- fitted(OBR_model, newdata = newdat, summary = TRUE)
newdat$Estimate <- preds[,"Estimate"]
newdat$Q2.5     <- preds[,"Q2.5"]
newdat$Q97.5    <- preds[,"Q97.5"]
ggplot(newdat, aes(x = TriggerLevel_scaled, y = Estimate, color = Recorder)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5, fill = Recorder), alpha = 0.2, color = NA) +
labs(y = "Predicted Relative Activity") +
theme_minimal()
